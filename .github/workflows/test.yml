name: Test sofa-setup-action

on:
  workflow_dispatch:
  push:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  run:
    name: Run on ${{ matrix.os }} with SOFA ${{ matrix.sofa_branch }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        sofa_branch: [master]

    steps:
      - name: Download and install the latest SOFA ${{ matrix.sofa_branch }} binaries
        shell: bash
        run: |
          # Download and install the latest SOFA ${{ matrix.sofa_branch }} binaries
          SOFA_OS="$RUNNER_OS"
          if [[ "$SOFA_OS" == "macOS" ]]; then
            SOFA_OS="MacOS"
          fi
          if ! ls -a "${{ github.workspace }}/sofa"/* >/dev/null 2>&1; then
            # directory does not exist or is empty
            mkdir -p "${{ runner.temp }}/sofa_tmp/zip" "${{ runner.temp }}/sofa_tmp/binaries"
            curl --output "${{ runner.temp }}/sofa_tmp/${SOFA_OS}.zip" -L \
              https://ci.inria.fr/sofa-ci-dev/job/nightly-generate-binaries/CI_BRANCH=${{ matrix.sofa_branch }},CI_SCOPE=full/lastSuccessfulBuild/artifact/${SOFA_OS}/*zip*/${SOFA_OS}.zip
            unzip -qq "${{ runner.temp }}"/sofa_tmp/${SOFA_OS}.zip -d "${{ runner.temp }}/sofa_tmp/zip"
            unzip -qq "${{ runner.temp }}"/sofa_tmp/zip/${SOFA_OS}/SOFA_*.zip -d "${{ runner.temp }}/sofa_tmp/binaries"
            $SUDO mkdir -p "${{ github.workspace }}/sofa"
            $SUDO mv "${{ runner.temp }}"/sofa_tmp/binaries/SOFA_*/* "${{ github.workspace }}/sofa"
          fi
          echo '--------------------------------------------'
          echo "SOFA successfully downloaded and installed in ${{ github.workspace }}/sofa"
          echo '------------- inputs.sofa_root -------------'
          ls -la "${{ github.workspace }}/sofa"
          echo '--------------- git-info.txt ---------------'
          cat "${{ github.workspace }}/sofa"/git-info.txt 2>&1 || true

      - name: Set SOFA_ROOT and outputs.sofa_root
        id: set-sofa-root
        shell: bash
        run: |
          SOFA_ROOT='${{ github.workspace }}/sofa'
          echo "SOFA_ROOT=$SOFA_ROOT" | tee -a $GITHUB_ENV
          echo "$SOFA_ROOT" >> $GITHUB_PATH
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "$SOFA_ROOT\bin" >> $GITHUB_PATH
          fi
          echo "name=sofa_root::$(echo $SOFA_ROOT)"  >> $GITHUB_OUTPUT
          

      - name: Clone regression for ref folder
        id: clone-regression
        shell: bash
        run: |
          cd ${{ github.workspace }}/sofa/share/sofa
          mkdir applications && cd applications
          mkdir projects && cd projects 
          git clone https://github.com/sofa-framework/Regression.git
          cd ${{ github.workspace }}

      - name: Launch test
        id: tests
        uses: bakpaul/sofa-test-action@only_add_regression
        with:
          sofa_install_path: ${{ github.workspace }}/sofa
          regression_file_path: ${{ github.workspace }}/sofa/share/sofa/examples
          sofa_version: ${{ matrix.sofa_branch }}


